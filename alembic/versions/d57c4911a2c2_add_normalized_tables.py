"""add normalized tables.

Revision ID: d57c4911a2c2
Revises: 
Create Date: 2024-06-12 10:57:11.844170

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd57c4911a2c2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('designations',
    sa.Column('designationId', sa.String(), nullable=False),
    sa.Column('designationName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('designationId')
    )
    op.create_table('fiscal_years',
    sa.Column('fiscalId', sa.String(), nullable=False),
    sa.Column('fiscalStartDate', sa.DateTime(), nullable=True),
    sa.Column('fiscalEndDate', sa.DateTime(), nullable=True),
    sa.Column('fiscalIsCurrent', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('fiscalId')
    )
    op.create_table('leave_types',
    sa.Column('leaveTypeId', sa.String(), nullable=False),
    sa.Column('leaveTypeName', sa.String(), nullable=True),
    sa.Column('defaultDays', sa.Integer(), nullable=True),
    sa.Column('transferableDays', sa.Integer(), nullable=True),
    sa.Column('isConsecutive', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('leaveTypeId')
    )
    op.create_table('users',
    sa.Column('userId', sa.String(), nullable=True),
    sa.Column('empId', sa.String(), nullable=True),
    sa.Column('teamManagerId', sa.String(), nullable=True),
    sa.Column('firstName', sa.String(), nullable=True),
    sa.Column('middleName', sa.String(), nullable=True),
    sa.Column('lastName', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('isHr', sa.Boolean(), nullable=True),
    sa.Column('isSupervisor', sa.Boolean(), nullable=True),
    sa.Column('designationId', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['designationId'], ['designations.designationId'], ),
    sa.PrimaryKeyConstraint('userId')
    )
    op.create_table('allocations',
    sa.Column('allocationId', sa.String(), nullable=False),
    sa.Column('userId', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], ),
    sa.PrimaryKeyConstraint('allocationId')
    )
    op.create_table('leave_requests',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('userId', sa.String(), nullable=True),
    sa.Column('leaveIssuerId', sa.String(), nullable=True),
    sa.Column('currentLeaveIssuerId', sa.String(), nullable=True),
    sa.Column('leaveIssuerFirstName', sa.String(), nullable=True),
    sa.Column('leaveIssuerLastName', sa.String(), nullable=True),
    sa.Column('currentLeaveIssuerEmail', sa.String(), nullable=True),
    sa.Column('departmentDescription', sa.String(), nullable=True),
    sa.Column('startDate', sa.Date(), nullable=True),
    sa.Column('endDate', sa.Date(), nullable=True),
    sa.Column('leaveDays', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.Column('leaveTypeId', sa.String(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('isConverted', sa.Boolean(), nullable=True),
    sa.Column('fiscalId', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['fiscalId'], ['fiscal_years.fiscalId'], ),
    sa.ForeignKeyConstraint(['leaveTypeId'], ['leave_types.leaveTypeId'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('leave_requests')
    op.drop_table('allocations')
    op.drop_table('users')
    op.drop_table('leave_types')
    op.drop_table('fiscal_years')
    op.drop_table('designations')
    # ### end Alembic commands ###
